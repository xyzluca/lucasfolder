---
import { getCollection } from 'astro:content'
import FormattedDate from '@/components/widgets/FormattedDate.astro'
import { themeConfig } from '@/config'

// Get work experience data
const workExperience = await getCollection('work')
const sortedWork = workExperience.sort((a, b) => {
  // Sort by start date, with current positions first
  if (a.data.current && !b.data.current) return -1
  if (!a.data.current && b.data.current) return 1
  return b.data.startDate.getTime() - a.data.startDate.getTime()
})
---

<ul class="work-list">
  {
    sortedWork.map((work) => (
      <li>
        {work.data.url ? (
          <a href={work.data.url} target="_blank" rel="noopener noreferrer">
            <div class="post-item work-item">
              <div class="title-container">
                <div class="content-info">
                  <p class="title">{work.data.role}</p>
                  <p class="description">{work.data.description}</p>
                </div>
              </div>
            </div>
          </a>
        ) : (
          <div class="post-item work-item">
            <div class="title-container">
              <div class="content-info">
                <p class="title">
                  {work.data.role} at {work.data.company}
                </p>
                <p class="description">{work.data.description}</p>
              </div>
            </div>
          </div>
        )}
      </li>
    ))
  }
</ul>

<style>
  .work-list {
    padding: 0;
    margin: 0;
    list-style-type: none;
    display: flex;
    flex-direction: column;
    gap: 0;
  }

  a {
    color: var(--text-primary);
    display: block;
    text-decoration: none;
    transition: opacity 0.15s ease-out;
  }

  @media (hover: hover) and (pointer: fine) {
    .work-list:hover a {
      opacity: 0.4;
    }

    .work-list:hover a:hover {
      opacity: 1;
    }

    .work-list:hover a:hover .divider {
      background-color: var(--text-tertiary);
      opacity: 0.75;
    }
    .work-list:hover a:hover .dotted-divider {
      color: var(--text-secondary);
    }
    .work-list:hover a:hover .date {
      color: var(--text-secondary);
      opacity: 1;
    }
  }

  .post-item {
    min-height: 2.75rem;
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 0.75rem;
    padding: 0.5rem 0;
  }

  .post-item.date-left {
    justify-content: flex-start;
  }

  .post-item.date-left .title-container {
    flex: 1 1 auto;
    min-width: 0;
  }

  .post-item.date-left .date {
    margin-right: 0.75rem;
  }

  .title-container {
    display: flex;
    align-items: flex-start;
    flex-shrink: 1;
    min-width: 0;
  }

  .content-info {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    min-width: 0;
    flex: 1;
  }

  .title {
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .description {
    margin: 0;
    font-size: 0.85rem;
    color: var(--text-secondary);
    line-height: 1.4;
    opacity: 0.8;
  }

  .date {
    margin: 0;
    color: var(--text-secondary);
    opacity: 0.75;
    letter-spacing: var(--spacing-s);
    flex-shrink: 0;
    white-space: nowrap;
  }

  .divider {
    flex: 1 1 auto;
    min-width: 3rem;
    margin: 0 0.25rem;
    height: 0.5px;
    background-color: var(--border);
  }

  .dotted-divider {
    flex: 1 1 3rem;
    min-width: 3rem;
    max-width: 100%;
    text-align: end;
    letter-spacing: 5px;
    height: 1.675rem;
    overflow: hidden;
    color: var(--text-tertiary);
    opacity: 0.75;
  }

  .dotted-divider::after {
    content: '·····························································································································································';
    pointer-events: none;
  }
</style>
