---
// Giscus Comments Component for lucakursawe.xyz
// Make sure to configure your GitHub discussions repository first
import { themeConfig } from '@/config'

const { comments } = themeConfig
---

<div id="giscus-comments" class="giscus-container">
  <script
    src="https://giscus.app/client.js"
    data-repo={comments.repo}
    data-repo-id={comments.repoId}
    data-category={comments.category}
    data-category-id={comments.categoryId}
    data-mapping={comments.mapping}
    data-strict={comments.strict ? "1" : "0"}
    data-reactions-enabled={comments.reactionsEnabled ? "1" : "0"}
    data-emit-metadata={comments.emitMetadata ? "1" : "0"}
    data-input-position={comments.inputPosition}
    data-theme={comments.theme}
    data-lang={comments.lang}
    data-loading="lazy"
    crossorigin="anonymous"
    async>
  </script>
</div>

<style>
  .giscus-container {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border-color, #e5e7eb);
  }

  /* Dark mode styling */
  :global(html.dark) .giscus-container {
    border-top-color: var(--border);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .giscus-container {
      margin-top: 2rem;
      padding-top: 1.5rem;
    }
  }

  /* Custom giscus theme integration */
  :global(.giscus-frame) {
    width: 100%;
    border-radius: 0;
    border: none;
  }

  /* Ensure giscus blends with dark background */
  :global(html.dark) .giscus-container {
    background-color: var(--bg);
  }

  /* Additional giscus styling for better integration */
  :global(.giscus) {
    background-color: transparent !important;
  }
</style>

<script>
  // Custom giscus theme integration for your site
  function updateGiscusTheme() {
    const iframe = document.querySelector<HTMLIFrameElement>('iframe.giscus-frame');
    if (!iframe) return;

    // Detect current theme by checking if 'dark' class is on html element
    const isDark = document.documentElement.classList.contains('dark') || 
                  (window.matchMedia('(prefers-color-scheme: dark)').matches && 
                   !document.documentElement.classList.contains('light'));
    
    // Use themes that better match your site's background colors
    const theme = isDark ? 'transparent_dark' : 'light';
    
    // Send theme update to giscus
    iframe.contentWindow?.postMessage(
      { 
        giscus: { 
          setConfig: { 
            theme: theme 
          } 
        } 
      }, 
      'https://giscus.app'
    );
  }

  // Listen for theme changes
  document.addEventListener('astro:page-load', () => {
    // Wait for giscus to load
    setTimeout(updateGiscusTheme, 1000);
  });

  // Listen for manual theme toggles by watching class changes on html element
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.type === 'attributes' && 
          (mutation.attributeName === 'class' || mutation.attributeName === 'data-theme')) {
        updateGiscusTheme();
      }
    });
  });

  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['class', 'data-theme']
  });

  // Listen for system theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', updateGiscusTheme);

  // Initial theme setup
  setTimeout(updateGiscusTheme, 500);
</script>