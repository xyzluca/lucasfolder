---
// Giscus Comments Component for lucakursawe.xyz
// Make sure to configure your GitHub discussions repository first
import { themeConfig } from '@/config'

const { comments } = themeConfig
---

<div id="giscus-comments" class="giscus-container">
  <script
    src="https://giscus.app/client.js"
    data-repo={comments.repo}
    data-repo-id={comments.repoId}
    data-category={comments.category}
    data-category-id={comments.categoryId}
    data-mapping={comments.mapping}
    data-strict={comments.strict ? '1' : '0'}
    data-reactions-enabled="0"
    data-emit-metadata="0"
    data-input-position="bottom"
    data-theme={comments.theme}
    data-lang={comments.lang}
    data-loading="lazy"
    crossorigin="anonymous"
    async
  ></script>
</div>

<style>
  .giscus-container {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border-color, #e5e7eb);
  }

  /* Dark mode styling */
  :global(html.dark) .giscus-container {
    border-top-color: var(--border);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .giscus-container {
      margin-top: 2rem;
      padding-top: 1.5rem;
    }
  }

  /* Ultra minimal giscus styling */
  :global(.giscus-frame) {
    width: 100%;
    border: none;
    background: transparent;
  }

  /* Ensure clean integration */
  :global(html.dark) .giscus-container {
    background-color: var(--bg);
  }

  /* ULTRA MINIMAL STYLING - Hide everything unnecessary */
  :global(.giscus) {
    background-color: transparent !important;
  }

  /* Hide all avatars */
  :global(.giscus .gsc-comment-author-avatar) {
    display: none !important;
  }

  /* Hide all reaction buttons */
  :global(.giscus .gsc-reactions) {
    display: none !important;
  }

  /* Hide reply buttons */
  :global(.giscus .gsc-reply) {
    display: none !important;
  }

  /* Hide timestamps and metadata */
  :global(.giscus .gsc-comment-created-at) {
    display: none !important;
  }

  /* Hide comment footer completely */
  :global(.giscus .gsc-comment-footer) {
    display: none !important;
  }

  /* Hide edit/delete buttons */
  :global(.giscus .gsc-comment-author-association) {
    display: none !important;
  }

  /* Clean comment styling - no borders, minimal padding */
  :global(.giscus .gsc-comment) {
    border: none !important;
    background: transparent !important;
    padding: 0.5rem 0 !important;
    margin: 0 !important;
  }

  /* Clean comment content */
  :global(.giscus .gsc-comment-content) {
    margin-left: 0 !important;
    padding: 0 !important;
  }

  /* Minimal author name styling */
  :global(.giscus .gsc-comment-author) {
    font-size: var(--font-size-m) !important;
    font-weight: var(--font-weight-regular) !important;
    margin-bottom: 0.25rem !important;
  }

  /* Clean timeline */
  :global(.giscus .gsc-timeline) {
    border: none !important;
    background: transparent !important;
  }

  /* Minimal comment box styling */
  :global(.giscus .gsc-comment-box) {
    border: none !important;
    background: transparent !important;
    margin: 1rem 0 0 0 !important;
  }

  /* Hide comment input when not needed */
  :global(.giscus .gsc-comment-box-textarea) {
    border: 1px solid var(--border) !important;
    background-color: var(--bg) !important;
    border-radius: 6px !important;
    padding: 0.75rem !important;
    font-family: var(--sans) !important;
    font-size: var(--font-size-m) !important;
  }

  /* Clean sign-in button */
  :global(.giscus .gsc-comment-box-main) {
    border: none !important;
    background: transparent !important;
  }
</style>

<script>
  // Custom giscus theme integration for your site
  function updateGiscusTheme() {
    const iframe = document.querySelector<HTMLIFrameElement>('iframe.giscus-frame')
    if (!iframe) return

    // Detect current theme by checking if 'dark' class is on html element
    const isDark =
      document.documentElement.classList.contains('dark') ||
      (window.matchMedia('(prefers-color-scheme: dark)').matches &&
        !document.documentElement.classList.contains('light'))

    // Use ultra minimal themes
    const theme = isDark ? 'noborder_dark' : 'noborder_light'

    // Send theme update to giscus
    iframe.contentWindow?.postMessage(
      {
        giscus: {
          setConfig: {
            theme: theme
          }
        }
      },
      'https://giscus.app'
    )
  }

  // Listen for theme changes
  document.addEventListener('astro:page-load', () => {
    // Wait for giscus to load
    setTimeout(updateGiscusTheme, 1000)
  })

  // Listen for manual theme toggles by watching class changes on html element
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (
        mutation.type === 'attributes' &&
        (mutation.attributeName === 'class' || mutation.attributeName === 'data-theme')
      ) {
        updateGiscusTheme()
      }
    })
  })

  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['class', 'data-theme']
  })

  // Listen for system theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', updateGiscusTheme)

  // Initial theme setup
  setTimeout(updateGiscusTheme, 500)
</script>
