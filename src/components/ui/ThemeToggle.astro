---
import { themeConfig } from '@/config'
---

{
  themeConfig.general.themeToggle && (
    <button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
      <span class="theme-toggle__option" data-theme="light">
        Light
      </span>
      <span aria-hidden="true" class="theme-toggle__separator">
        ·
      </span>
      <span class="theme-toggle__option" data-theme="dark">
        Dark
      </span>
      <span aria-hidden="true" class="theme-toggle__separator">
        ·
      </span>
      <span class="theme-toggle__option" data-theme="colorful">
        Colorful
      </span>
    </button>
  )
}

<script is:inline>
  function bindThemeToggle() {
    const themeToggle = document.getElementById('theme-toggle')
    if (themeToggle && window.ThemeManager) {
      // Remove existing event listeners to prevent duplicates
      const newToggle = themeToggle.cloneNode(true)
      themeToggle.parentNode.replaceChild(newToggle, themeToggle)

      newToggle.addEventListener('click', function (e) {
        e.preventDefault()
        e.stopPropagation()
        window.ThemeManager.toggle()
      })
    }
  }

  // Bind on initial load
  window.addEventListener('DOMContentLoaded', bindThemeToggle)

  // Bind on Astro page transitions
  document.addEventListener('astro:page-load', bindThemeToggle)
</script>

<style>
  .theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 0.35rem;
    font-size: var(--font-size-s);
    font-family: var(--sans);
    color: var(--text-secondary);
    letter-spacing: 0.02em;
    text-transform: uppercase;
    padding: 0 0.25rem;
    position: relative;
    transition: color 0.2s ease;
  }

  .theme-toggle:focus-visible {
    outline: 2px solid var(--text-tertiary);
    outline-offset: 3px;
  }

  .theme-toggle__separator {
    opacity: 0.3;
    transition: opacity 0.2s ease;
  }

  .theme-toggle__option {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    color: inherit;
    opacity: 0.55;
    font-weight: var(--font-weight-light);
    transition:
      opacity 0.2s ease,
      color 0.2s ease;
  }

  .theme-toggle__option::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -0.3rem;
    width: 100%;
    height: 1px;
    background: currentColor;
    opacity: 0;
    transform: scaleX(0.4);
    transform-origin: center;
    transition:
      opacity 0.2s ease,
      transform 0.2s ease;
  }

  .theme-toggle:hover .theme-toggle__option {
    opacity: 0.75;
  }

  html.light .theme-toggle__option[data-theme='light'],
  html.dark .theme-toggle__option[data-theme='dark'],
  html.colorful .theme-toggle__option[data-theme='colorful'] {
    color: var(--text-primary);
    opacity: 1;
    font-weight: var(--font-weight-regular);
  }

  html.light .theme-toggle__option[data-theme='light']::after,
  html.dark .theme-toggle__option[data-theme='dark']::after,
  html.colorful .theme-toggle__option[data-theme='colorful']::after {
    opacity: 1;
    transform: scaleX(1);
  }
</style>
