---
import { type CollectionEntry, getCollection } from 'astro:content'
import PostLayout from '@/layouts/PostLayout.astro'
import { render } from 'astro:content'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  const projects = await getCollection('projects')

  const postPaths = posts
    .filter((post) => !post.id.startsWith('_'))
    .map((post) => ({
      params: { slug: post.id },
      props: { ...post, collection: 'posts' as const }
    }))

  const projectPaths = projects
    .filter((project) => !project.id.startsWith('_'))
    .map((project) => ({
      params: { slug: project.id },
      props: { ...project, collection: 'projects' as const }
    }))

  return [...postPaths, ...projectPaths]
}

type Props = (CollectionEntry<'posts'> | CollectionEntry<'projects'>) & {
  collection: 'posts' | 'projects'
}

const post = Astro.props
const { Content, remarkPluginFrontmatter } = await render(post)

const readingTime = remarkPluginFrontmatter.readingTime
const toc = remarkPluginFrontmatter.toc || []
---

<PostLayout {...post.data} readingTime={readingTime} toc={toc}>
  <Content />
</PostLayout>
